/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package farmasalud.pedidoCotizacion;

import farmasalud.operaciones.ODetallesCotizaciones;
import farmasalud.ConsultasGenerales;
import farmasalud.atributosclases.ADetalleConsolidado;
import farmasalud.operaciones.ODetallesPedidos;
import farmasalud.operaciones.OManager;
import farmasalud.pedidosSucursales.pintarCeldas;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import farmasalud.atributosclases.ADetalleCotizacion;
import farmasalud.atributosclases.ADetalleDetalleDeCotizacion;
import farmasalud.atributosclases.ADetallePedidos;
import farmasalud.atributosclases.AFormaFarmaceutica;
import farmasalud.atributosclases.ANoFarmaceutico;
import farmasalud.atributosclases.ANombreComercial;
import farmasalud.atributosclases.AProducto;
import farmasalud.atributosclases.AVademecum;
import farmasalud.jtable.jtDetalleCotizaciones;
import farmasalud.jtable.jtNuevaCotizacion;
import java.util.List;
import java.util.function.Consumer;
import java.util.stream.Collectors;

/**
 *
 * @author Francisco Palacio
 */
public class AgregarDetallePedidos extends javax.swing.JFrame {
    
 
    private List<Integer> cabeceraEditarEstado ;
    private OManager manager;
    private jtNuevaCotizacion modelos;
    private ArrayList<ADetallePedidos> detallesNuevos, detallesParaActualizar;
    private ArrayList<String> guardarIdProductos = new ArrayList();
    private ArrayList<String> todosIdProductos = new ArrayList();
    private ADetallePedidos ingresar;
    private int idCabeceraCotizacion;
    private JTable jTableDetalleCotizacion;
    private jtDetalleCotizaciones tabla;

    
    public AgregarDetallePedidos(JTable jTableDetalleCotizacion, jtDetalleCotizaciones tabla, int idCabeceraCotizacion) {
        this.detallesNuevos = new ArrayList<>();
        initComponents();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
            manager = new OManager();
        llenarTabla();
        this.idCabeceraCotizacion = idCabeceraCotizacion;
        this.jTableDetalleCotizacion = jTableDetalleCotizacion;
        this.tabla = tabla;
    }

    private void llenarTabla() {
        modelos = new jtNuevaCotizacion(manager.getCabeceraPedidos().obtenerPedidosXEstado("AU"), jTableDetallePedidos);
        jTableDetallePedidos.getTableHeader().setReorderingAllowed(false);
        modelos.llenarTablas();
    }
    
    private AgregarDetallePedidos() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuVerDetalle = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDetallePedidos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jMenuVerDetalle.setText("jMenuItem1");
        jMenuVerDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuVerDetalleActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuVerDetalle);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTableDetallePedidos.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTableDetallePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableDetallePedidos.setRowHeight(25);
        jTableDetallePedidos.setRowMargin(5);
        jTableDetallePedidos.setSelectionBackground(new java.awt.Color(0, 153, 0));
        jTableDetallePedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableDetallePedidosMouseReleased(evt);
            }
        });
        jTableDetallePedidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableDetallePedidosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDetallePedidos);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(337, 337, 337)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuVerDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuVerDetalleActionPerformed

    }//GEN-LAST:event_jMenuVerDetalleActionPerformed

    private void jTableDetallePedidosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDetallePedidosMouseReleased

    }//GEN-LAST:event_jTableDetallePedidosMouseReleased

    private void jTableDetallePedidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableDetallePedidosKeyReleased

    }//GEN-LAST:event_jTableDetallePedidosKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            detallesNuevos = new ArrayList();
        modelos.obtenerFilasSeleccionadas().forEach((String a) -> {
            System.out.println("filas seleccionadas" + a);
            manager.getDetallePedidos().obtenerDetallesPorCabecera(Integer.valueOf(a)).forEach((ADetallePedidos as) -> {
                ingresar = new ADetallePedidos();
                ingresar.setIdProducto(as.getIdProducto());
                ingresar.setCantidad(as.getCantidad());
                ingresar.setNumeroPedidos(as.getNumeroPedidos());
                ingresar.setIdDetalle(as.getIdDetalle());
                detallesNuevos.add(ingresar);
            });
        });
           cabeceraEditarEstado = new ArrayList();
        List<Integer> idProductosEnDetalles = manager.getDetalleCotizaciones().obtenerUno(idCabeceraCotizacion).stream().map(detalles -> detalles.getIdProducto())
                .collect(Collectors.toList());
        
        detallesNuevos.stream()
                .collect(Collectors.groupingBy(foo -> foo.getIdProducto(),
                        Collectors.summingInt(foo -> foo.getCantidad()))).forEach((producto, cantidad) -> {
            
            if (idProductosEnDetalles.contains(producto)) {
                actualizarDetalleCotizacion(cantidad, producto);
    
            } else {
                registrarDetalleCotizacion(producto, cantidad);
                            }
           
        });
        manager.getCabeceraPedidos().actulizarEstado(cabeceraEditarEstado.stream().distinct().collect(Collectors.toList()), "EC");
        pintarCeldas pintar = new pintarCeldas("idConsolidado");
        tabla.update(idCabeceraCotizacion);
        jTableDetalleCotizacion.setModel(tabla);
        jTableDetalleCotizacion.updateUI();
        jTableDetalleCotizacion.getColumn("Id").setCellRenderer(pintar);
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void registrarDetalleCotizacion(Integer producto, Integer cantidad) {
    ADetalleCotizacion insertarDetalles = new ADetalleCotizacion();
      ADetalleDetalleDeCotizacion insertarDetallesDelDetalle=new ADetalleDetalleDeCotizacion();
        insertarDetalles.setIdCotizacion(idCabeceraCotizacion);
        insertarDetalles.setIdProducto(producto);
        insertarDetalles.setCantidad(cantidad);
        int idDetalleCotizacion = manager.getDetalleCotizaciones().insertar(insertarDetalles);
        insertarDetallesDelDetalle.setIdDetalleCotizacion(idDetalleCotizacion);
        manager.getDetalleCotizaciones().obtenerIdProductos(idDetalleCotizacion).forEach((Integer b) -> {
            detallesNuevos.forEach((ADetallePedidos ad)->{
                if(b.equals(ad.getIdProducto())){
                    insertarDetallesDelDetalle.setIdDetallePedido(ad.getIdDetalle());
                    manager.getDetalleDetalle().insertar(insertarDetallesDelDetalle);
                    cabeceraEditarEstado.add(ad.getNumeroPedidos());
                }
            });
        });
        
    }

    private void actualizarDetalleCotizacion(Integer cantidad, Integer producto) {
   ArrayList<ADetalleCotizacion >  listaActualizadaDetalles=new ArrayList();
       ADetalleCotizacion  insertarDetalles = new ADetalleCotizacion();
      ADetalleDetalleDeCotizacion insertarDetallesDelDetalle=new ADetalleDetalleDeCotizacion();
        manager.getDetalleCotizaciones().obtenerUno(idCabeceraCotizacion).forEach((ADetalleCotizacion ad) -> {
            if(ad.getIdProducto()==producto){
                System.out.println(cantidad);
                System.out.println(ad.getCantidad());
              int nuevoTotal = cantidad + ad.getCantidad();
                 System.out.println(ad.getIdDetalleCotizacion());
            insertarDetalles.setIdDetalleCotizacion(ad.getIdDetalleCotizacion());
            insertarDetalles.setCantidad(nuevoTotal);
            listaActualizadaDetalles.add(insertarDetalles);
      
            detallesNuevos.forEach((ADetallePedidos adp)->{
                if(adp.getIdProducto()==producto){
                    insertarDetallesDelDetalle.setIdDetalleCotizacion(ad.getIdDetalleCotizacion());
                    insertarDetallesDelDetalle.setIdDetallePedido(adp.getIdDetalle());
                    manager.getDetalleDetalle().insertar(insertarDetallesDelDetalle);
                  cabeceraEditarEstado.add(adp.getNumeroPedidos());
                }
                
            });
            }
           
        });
        System.out.println(listaActualizadaDetalles.iterator().next());
            manager.getDetalleCotizaciones().actualizar(listaActualizadaDetalles); 
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgregarDetallePedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgregarDetallePedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgregarDetallePedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgregarDetallePedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgregarDetallePedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuItem jMenuVerDetalle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableDetallePedidos;
    // End of variables declaration//GEN-END:variables

}
